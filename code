#include<Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>



#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);

unsigned long timer = 0;

 
const int MPU_addr=0x68;
int16_t AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ;
 
int minVal=265;
int maxVal=402;
 
double x;
double y;
double z;

const int buttonPin = 2;     // the number of the pushbutton pin

// variables will change:
int buttonState = 0;         // variable for reading the pushbutton status
int count_value =0;
int prestate =0;
 
void setup(){
  Serial.begin(115200); 
    pinMode(buttonPin, INPUT);                             
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))  
  { 
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);                                      
  } 
  display.setTextSize(1);             
  display.setTextColor(SSD1306_WHITE);            
display.clearDisplay();                         
Wire.begin();

Wire.beginTransmission(MPU_addr);
Wire.write(0x6B);
Wire.write(0);
Wire.endTransmission(true);
Serial.begin(9600);

}
void loop(){
Wire.beginTransmission(MPU_addr);
Wire.write(0x3B);
Wire.endTransmission(false);
Wire.requestFrom(MPU_addr,14,true);
AcX=Wire.read()<<8|Wire.read();
AcY=Wire.read()<<8|Wire.read();
AcZ=Wire.read()<<8|Wire.read();
int xAng = map(AcX,minVal,maxVal,-90,90);
int yAng = map(AcY,minVal,maxVal,-90,90);
int zAng = map(AcZ,minVal,maxVal,-90,90);
 
x= RAD_TO_DEG * (atan2(-yAng, -zAng)+PI);
y= RAD_TO_DEG * (atan2(-xAng, -zAng)+PI);
z= RAD_TO_DEG * (atan2(-yAng, -xAng)+PI);

x=round(x - 180);
y=round(y- (180+70));
z=round(z - 180);
if((millis()-timer)>10)                         
  {                                           
    display.clearDisplay();                       
    display.setCursor(0,0);                         
    display.print("X= " + String(x) );

 
display.print("Y= " + String(y));
 
display.println("Z= " + String(z));


    display.display();                            
    timer = millis();  
  }

    buttonState = digitalRead(buttonPin);


  if (buttonState == HIGH && prestate == 0) {
    count_value++;
    display.println("shots fired= " + String(count_value));

    prestate = 1;
  } else if(buttonState == LOW) {
    prestate = 0;
  }

}
